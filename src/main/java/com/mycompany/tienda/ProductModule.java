/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tienda;

/**
 *
 * @author jpyntiquilla
 */

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;

public class ProductModule extends JFrame {
    private JTextField idField, nameField, descriptionField, priceField, quantityField, searchField;
    private JButton addButton, searchButton, updateButton;
    private JTable productTable;
    private DefaultTableModel tableModel;
    private JLabel messageLabel;

    /**
     * Creates new form ProductModule
     */
    public ProductModule() {
    /// Configurar el JFrame
        setTitle("Módulo de Productos");
        setSize(700, 500);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);

        // Crear el panel principal
        JPanel panel = new JPanel();
        panel.setLayout(null);

        // Campos de texto y etiquetas
        JLabel idLabel = new JLabel("ID:");
        idLabel.setBounds(20, 20, 100, 25);
        panel.add(idLabel);

        idField = new JTextField(20);
        idField.setBounds(120, 20, 150, 25);
        panel.add(idField);

        JLabel nameLabel = new JLabel("Nombre:");
        nameLabel.setBounds(20, 60, 100, 25);
        panel.add(nameLabel);

        nameField = new JTextField(20);
        nameField.setBounds(120, 60, 150, 25);
        panel.add(nameField);

        JLabel descriptionLabel = new JLabel("Descripción:");
        descriptionLabel.setBounds(20, 100, 100, 25);
        panel.add(descriptionLabel);

        descriptionField = new JTextField(20);
        descriptionField.setBounds(120, 100, 150, 25);
        panel.add(descriptionField);

        JLabel priceLabel = new JLabel("Precio:");
        priceLabel.setBounds(20, 140, 100, 25);
        panel.add(priceLabel);

        priceField = new JTextField(20);
        priceField.setBounds(120, 140, 150, 25);
        panel.add(priceField);

        JLabel quantityLabel = new JLabel("Cantidad:");
        quantityLabel.setBounds(20, 180, 100, 25);
        panel.add(quantityLabel);

        quantityField = new JTextField(20);
        quantityField.setBounds(120, 180, 150, 25);
        panel.add(quantityField);

        // Botones
        addButton = new JButton("Añadir Producto");
        addButton.setBounds(20, 220, 150, 25);
        panel.add(addButton);

        updateButton = new JButton("Actualizar Producto");
        updateButton.setBounds(180, 220, 150, 25);
        panel.add(updateButton);

        searchField = new JTextField(20);
        searchField.setBounds(20, 260, 150, 25);
        panel.add(searchField);

        searchButton = new JButton("Buscar Producto");
        searchButton.setBounds(180, 260, 150, 25);
        panel.add(searchButton);

        // Crear la tabla y su modelo
        String[] columnNames = {"ID", "Nombre", "Descripción", "Precio", "Cantidad"};
        tableModel = new DefaultTableModel(columnNames, 0);
        productTable = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(productTable);
        scrollPane.setBounds(20, 300, 650, 150);
        panel.add(scrollPane);

        // Mensaje
        messageLabel = new JLabel("");
        messageLabel.setBounds(20, 460, 450, 25);
        panel.add(messageLabel);

        // Añadir ActionListeners
        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                addProduct();
            }
        });

        updateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateProduct();
            }
        });

        searchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                searchProduct();
            }
        });
   add(panel);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void addProduct() {
        String id = idField.getText();
        String name = nameField.getText();
        String description = descriptionField.getText();
        double price = Double.parseDouble(priceField.getText());
        int quantity = Integer.parseInt(quantityField.getText());

        Product product = new Product(id, name, description, price, quantity);
        boolean success = ProductManager.getInstance().addProduct(product);

        if (success) {
            messageLabel.setText("Producto añadido exitosamente");
            clearFields();
            listProducts();
        } else {
            messageLabel.setText("El producto ya existe");
        }
    }

    private void updateProduct() {
        String id = idField.getText();
        String name = nameField.getText();
        String description = descriptionField.getText();
        double price = Double.parseDouble(priceField.getText());
        int quantity = Integer.parseInt(quantityField.getText());

        Product product = new Product(id, name, description, price, quantity);
        boolean success = ProductManager.getInstance().updateProduct(product);

        if (success) {
            messageLabel.setText("Producto actualizado exitosamente");
            clearFields();
            listProducts();
        } else {
            messageLabel.setText("El producto no existe");
        }
    }

    private void searchProduct() {
        String id = searchField.getText();
        Product product = ProductManager.getInstance().getProduct(id);

        if (product != null) {
            idField.setText(product.getId());
            nameField.setText(product.getName());
            descriptionField.setText(product.getDescription());
            priceField.setText(String.valueOf(product.getPrice()));
            quantityField.setText(String.valueOf(product.getQuantity()));
            messageLabel.setText("Producto encontrado");
        } else {
            messageLabel.setText("Producto no encontrado");
        }
    }

    private void listProducts() {
        HashMap<String, Product> products = ProductManager.getInstance().getProducts();
        tableModel.setRowCount(0); // Limpiar la tabla
        for (Product product : products.values()) {
            Object[] row = {product.getId(), product.getName(), product.getDescription(), product.getPrice(), product.getQuantity()};
            tableModel.addRow(row);
        }
    }

    private void clearFields() {
        idField.setText("");
        nameField.setText("");
        descriptionField.setText("");
        priceField.setText("");
        quantityField.setText("");
        searchField.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
            new ProductModule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
